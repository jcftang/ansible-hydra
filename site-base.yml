# order matters!
---
- hosts: all
  user: root

  tasks:
    - group_by: key="{{ansible_distribution_release}}"

- hosts: Carbon
  user: root

  roles:
    - etckeeper
    - common

- hosts: precise
  user: root

  roles:
    - etckeeper
    - common

  post_tasks:
    - copy: src=files/sudoers.d-root-ssh-agent dest=/etc/sudoers.d/root-ssh-agent mode=0640
    - template: src=templates/hosts dest=/etc/hosts mode=0644

    ## install ceph from upstream repos
    - name: Get ceph release key
      apt_key: id=17ED316D url=https://raw.github.com/ceph/ceph/master/keys/release.asc state=present
      environment:
        https_proxy: http://{{proxy_server}}:{{proxy_port}}
      when: proxy_is_set is defined

    - name: Get ceph release key
      apt_key: id=17ED316D url=https://raw.github.com/ceph/ceph/master/keys/release.asc state=present
      when: proxy_is_set is not defined

    - copy: src=files/ceph.list dest=/etc/apt/sources.list.d/ceph.list owner=root group=root mode=0644

    - apt: name=ceph-fs-common state=present update_cache=yes

    - apt_repository: repo='ppa:fish-shell/release-2' state=present
    - apt: name=fish state=present

- hosts: monitoring
  user: root

  roles:
    - collectd-server

- hosts: all:!monitoring
  user: root

  roles:
    - collectd-client

# Mysql - this is needed before fedora-commons and the rails app is setup
- hosts: mysql
  user: root

  roles:
    - mysql

  tasks:
    - name: create db '{{ fedora_db_name }}'
      mysql_db: db={{ fedora_db_name }} state=present

    - name: create user '{{ fedora_db_user }}' with password '{{ fedora_db_pass }}' for '{{ fedora_db_name }}' and grant all priveleges
      mysql_user: state=present name={{ fedora_db_user }} password={{ fedora_db_pass }} priv={{ fedora_db_name }}.*:ALL host={{ groups['fedora'][0] }}

- hosts: redis
  user: root

  roles:
    - redis

# Fedora-Commons - Preservation and archival repository
- hosts: fedora
  user: root

  roles:
    - tomcat
    - fedora

# SOLR - search engine
- hosts: solr
  user: root

  roles:
    - tomcat
    - solr

# mod_passenger for the systems that will run the rails app or the resque queues
- hosts: passenger
  user: root

  tasks:
    - name: Create $rvm_user
      user: name={{rvm_user}} state=present shell=/bin/bash generate_ssh_key=yes

    - name: Make sure .ssh directory exists
      file: path=/home/{{rvm_user}}/.ssh state=directory owner={{ rvm_user }} group={{rvm_user}}

    - authorized_key: user={{rvm_user}} key="{{ lookup('file','~/.ssh/id_rsa.pub') }}"

    - name: install insecure ssh config for $rvm_user if proxy_is_set is defined
      template: src=files/insecure_config_proxy dest=/home/{{rvm_user}}/.ssh/config mode=0600 owner={{ rvm_user }} group={{rvm_user}}
      when: proxy_is_set is defined
      tags: passenger

    - template: src=roles/proxy/templates/precise/curlrc.j2 dest=/home/{{rvm_user}}/.curlrc owner={{rvm_user}} group={{rvm_user}}
      when: proxy_is_set is defined

    - template: src=roles/proxy/templates/precise/gemrc.j2 dest=/home/{{rvm_user}}/.gemrc owner={{rvm_user}} group={{rvm_user}}
      when: proxy_is_set is defined

- hosts: passenger
  user: root

  roles:
    - rvm-common
    - rvm-passenger
    - fits

- hosts: shibboleth-idp
  user: root

  roles:
    - slapd
    - shibboleth-idp

- hosts: buildbot
  user: root

  roles:
    - buildbot-master

  tasks:
    - name: Install dependancies
      apt: name=$item state=present
      with_items:
        - imagemagick
        - libgraphicsmagick1-dev
        - npm
        - clamav
        - libclamav-dev
        - ffmpeg
        - libavcodec-extra-53
        - libmysqlclient-dev

    - apt_repository: repo="ppa:pcarrier/ppa" state=present
    - apt: name=phantomjs state=present

    - apt_repository: repo="ppa:rquillo/ansible" state=present
    - apt: name=ansible state=latest

    - template: src=templates/hosts.buildbot dest=/home/{{rvm_user}}/hosts.buildbot owner={{rvm_user}} group={{rvm_user}} mode=0600
